{"version":3,"sources":["single_bulb_logo.png","CollapseWithHeader.jsx","NothingSelectedPane.jsx","NewCoursePage/AssignmentCategoryItem.jsx","NewCoursePage/NewCoursePage.jsx","CourseHomePage/InlineEdit.jsx","CourseHomePage/AssignmentRow.jsx","HabitPage/HabitPage.jsx","AnalyticsPage/TranslatableG.jsx","util.js","AnalyticsPage/DivWithBullseye.jsx","AnalyticsPage/Scatterplot.jsx","AnalyticsPage/HabitAggregators.js","AnalyticsPage/AnalyticsPage.jsx","CourseHomePage/CourseHomePage.jsx","Navigation.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CollapseWithHeading","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","initialIsOpen","toggleOpenState","bind","assertThisInitialized","inherits","createClass","key","value","setState","prevState","titleBackground","openIconClassName","openIcon","react_default","a","createElement","className","style","paddingLeft","headingClassName","onClick","headingText","reactstrap_es","children","React","Component","defaultProps","NothingSelectedPane","AssignmentCategoryItem","_Component","checked","item","weight","valid","isNaN","firstTime","handleCheckedChange","handleWeightChange","handleItemClosed","setItem","index","name","evt","target","Number","_this2","errorStyle","type","onChange","NewCoursePage","objectSpread","id","uuid","longName","shortName","isActive","categories","assignments","newACName","newACWeight","modelFirstTime","editing","oldSet","initalState","Set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","category","add","err","return","sum","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ratio","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","onModalSaved","onSaved","i","obj","copy","slice","push","length","newSet","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","toConsumableArray","filter","x","has","size","window","confirm","newcat","stateCopy","onCourseSaved","alert","assCategoryItems","AssignmentCategoryItem_AssignmentCategoryItem","toString","warn","modelWarn","CollapseWithHeader_CollapseWithHeading","htmlFor","updateShortName","placeholder","updateCourseTitle","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","updateACName","onCancelClicked","InlineEdit","isEditing","text","setEditing","handleChange","handleFocusOut","handleKeyUp","event","onFocusOut","keyCode","_this$props","staticClassName","_this$state","onBlur","onKeyUp","autoFocus","title","onFocus","_","noop","AssignmentRow","data","propName","isNumber","arguments","newValue","isFinite","clone","assignment","onAssignmentSaved","_this$props$assignmen","pointsEarned","pointsPossible","habits","InlineEdit_InlineEdit","String","onEditHabitPressed","isEmpty","onAssignmentDeleted","HabitPage","dateDue","dateStarted","hoursSpent","lecturePercentage","workedWithPeers","handleSavedPressed","handleCancelPressed","statePropName","defineProperty","onDataSaved","onCancel","display","alignItems","min","max","TranslatableG","y","innerRef","remainingProps","objectWithoutProperties","transform","concat","assign","ref","getRelativeCoordinates","relativeTo","currentTarget","targetBoundingRect","getBoundingClientRect","clientX","left","clientY","top","_MS_PER_DAY","DivWithBullseye","mouseCoordinates","storeMouseCoordinates","clearMouseCoordinates","onMouseMove","onMouseLeave","otherProps","mergedStyle","position","Bullseye","where","_props$where","horizontalLineStyle","willChange","verticalLineStyle","Fragment","Scatterplot","xAxisG","yAxisG","getScales","memoizeOne","regressionTooltipLocation","pointTooltipLocation","hoveredPointIndex","handleRegressionHover","handlePointHover","hideTooltips","pageX","pageY","width","height","_$unzip","unzip","_$unzip2","slicedToArray","xs","ys","xScale","scaleLinear","domain","range","yScale","_this$getScales","select","axisBottom","axisLeft","drawAxes","textAnchor","_this$getScales2","map","point","cx","cy","r","fill","fillOpacity","onMouseOut","regressionResult","isShowingTooltip","_this$getScales3","_xScale$domain","_xScale$domain2","xValue1","xValue2","yValue1","predict","yValue2","_xScale$range","_xScale$range2","x1","x2","lineCoordinates","y1","y2","stroke","strokeWidth","strokeOpacity","_this$props2","xLabel","location","xValue","invert","yPrediction","Tooltip","toFixed","_this$props3","getPointTooltipContents","_this3","_this$props4","DivWithBullseye_DivWithBullseye","node","renderRegressionResult","renderPoints","renderRegressionTooltip","renderPointTooltip","zIndex","HabitAggregator","aggregationName","getHabitValue","dataType","aggregateHabits","course","dataOrigins","gradePercent","habitValue","AGGREGATORS","b","utc1","Date","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","Infinity","AnalyticsPage","isAggregatingAll","selectedAggregator","setIsAggregatingAll","handleXAxisChange","getTooltipContentsForPoint","aggregateData","courses","datas","aggregator","resultsPerClass","flatMap","classResult","regression","linear","sort","r2","aggregationResults","options","aggregate","r2Explanation","string","equation","points","every","selectedCourse","origin","selectedData","percent","margin","find","Scatterplot_Scatterplot","renderXAxisSelect","renderDataSourceOptions","renderAdvancedStatistics","CourseHomePage","isCourseBeingEdited","prevCourseId","habitBeingEdited","isShowingAnalytics","isShowingDeleteWarning","handleAssignmentAdd","handleAssignmentSave","handleAssignmentDelete","setHabitBeingEdited","handleHabitSave","toggleActive","toggleWarningModal","newAssignments","courseCopy","onCourseEdited","setNewAssignments","newAssignment","assignmentsCopy","findIndex","assignmentToDelete","splice","assignmentRows","AssignmentRow_AssignmentRow","colSpan","toggle","onCourseDeleteRequested","_this4","NewCoursePage_NewCoursePage_NewCoursePage","HabitPage_HabitPage_HabitPage","bottomContent","categoryNames","assignmentsForCategory","groupBy","AnalyticsPage_AnalyticsPage_AnalyticsPage","renderCategoryTable","float","marginRight","react_switch_default","renderWarningModal","autoComplete","readOnly","Navigation","isAddingCourse","isSidebarOpen","showAddCoursesPane","handleCourseAdd","handleCourseEdit","handleCourseDelete","toggleSidebar","setSelectedCourse","coursesCopy","onCoursesChanged","courseElements","_$partition","partition","_$partition2","activeCourses","inactiveCourses","renderCourseGroup","contentPane","_this5","CourseHomePage_CourseHomePage_CourseHomePage","NothingSelectedPane_NothingSelectedPane","src","bulbImage","alt","renderSidebar","COURSE","App","handleCoursesChanged","newCourses","Navigation_Navigation","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89b09c17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/single_bulb_logo.67537171.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Collapse } from 'reactstrap';\nimport './CollapseWithHeader.css';\n\n/**\n * A simple heading, that when clicked, toggles visibility of content under it.  Set heading text and styling via props,\\\n * and content via children.\n * \n * @author Silas Hsu\n */\nexport class CollapseWithHeading extends React.Component {\n    static propTypes = {\n        headingText: PropTypes.string, // Text of the heading\n        headingClassName: PropTypes.string, // CSS class of the heading\n        initialIsOpen: PropTypes.bool // Whether content is initially visible\n    };\n\n    static defaultProps = {\n        headingText: '',\n        headingClassName: '',\n        initialIsOpen: true\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: props.initialIsOpen\n        };\n        this.toggleOpenState = this.toggleOpenState.bind(this);\n    }\n\n    /**\n     * Sets state to toggle content visibility.\n     */\n    toggleOpenState() {\n        this.setState(prevState => {\n            return {isOpen: !prevState.isOpen};\n        });\n    }\n\n    render() {\n        const titleBackground = this.props.titleBackground ?  \" collapse-title\" : \"\";\n        const openIconClassName = this.state.isOpen ? 'fas fa-chevron-down' : 'fas fa-chevron-right';\n        const openIcon = <i className={openIconClassName} style={{paddingLeft: '0.25em'}} />\n        return <div >\n            <div className={this.props.headingClassName + titleBackground} onClick={this.toggleOpenState}>\n                {this.props.headingText} {openIcon}\n            </div>\n            <Collapse isOpen={this.state.isOpen}>{this.props.children}</Collapse>\n        </div>\n    }\n}\n","import React from 'react';\nimport './NothingSelectedPane.css';\n\n/**\n * Content pane explaining that no class or function is selected.\n * \n * @author Silas Hsu\n * @modifier Srilakshmi Prasad\n */\nexport function NothingSelectedPane() {\n    return <div className='NothingSelectedPane'>\n    </div>;\n}\n","import React, { Component } from 'react';\n\nimport './AssignmentCategoryItem.css';\n\nexport class AssignmentCategoryItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: props.item.weight !== 0,\n            valid: !isNaN(props.item.weight) && props.item.weight > 0 && props.item.weight < 100,\n            firstTime: this.props.firstTime,\n        };\n        this.handleCheckedChange = this.handleCheckedChange.bind(this);\n        this.handleWeightChange = this.handleWeightChange.bind(this);\n        this.handleItemClosed = this.handleItemClosed.bind(this);\n    }\n\n    handleItemClosed() {\n        this.props.setItem(this.props.index, {\n            name: this.props.item.name,\n            weight: 0,\n        });\n    }\n\n    handleCheckedChange() {\n        if (this.state.checked) {\n            this.handleItemClosed();\n        }\n        this.setState({\n            checked: !this.state.checked\n        })\n    }\n\n    handleWeightChange(evt) {\n\n        // console.log(Number(evt.target.value));\n\n        this.props.setItem(this.props.index, {\n            name: this.props.item.name,\n            weight: isNaN(evt.target.value) ? 0 : Number(evt.target.value),\n        });\n\n\n        if (this.state.firstTime) {\n            this.setState({firstTime: false,});\n        }\n        if (evt.target.value === '' || isNaN(evt.target.value) || evt.target.value > 100) {\n            // console.log(\"no\");\n            this.setState({valid: false});\n            return;\n        }\n        if (!this.valid) {\n            this.setState({valid: true});\n        }\n        // console.log(\"yes\");\n\n    }\n\n\n    render() {\n        const errorStyle = !this.state.firstTime && !this.state.valid ? \" error-style\" : \"\";\n        const weight = this.state.checked\n            ? <span className=\"input-group mb-3 weight-input\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\">Weight: </span>\n                </div>\n                <input type=\"text\"\n                       className={\"form-control\"+ errorStyle}\n                       value={this.props.item.weight}\n                       onChange={evt => this.handleWeightChange(evt)}   />\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">%</span>\n                </div>\n              </span>\n            : null;\n\n        return (\n            <div className=\"weight\">\n                <span className=\"weight-name\">\n                    <input type=\"checkbox\"\n                           className=\"category-checkbox\"\n                           checked={ this.state.checked }\n                           onChange={ this.handleCheckedChange }/>\n                    <span>{this.props.item.name}</span>\n                </span>\n\n                {weight}\n            </div>\n        );\n    }\n}\n","/**\n * Created by RyanX on 2018/11/16.\n */\n\nimport React, { Component } from 'react';\nimport uuid from 'uuid/v4';\nimport { AssignmentCategoryItem } from './AssignmentCategoryItem';\nimport { CollapseWithHeading } from '../CollapseWithHeader';\nimport './NewCoursePage.css';\n\nexport class NewCoursePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: uuid(),\n            longName: '',\n            shortName: '',\n            isActive: true, // boolean\n            categories: [\n                {name: 'Homework', weight: 0.0},\n                {name: 'Project', weight: 0.0},\n                {name: 'Midterm', weight: 0.0},\n                {name: 'Final', weight: 0.0},\n                {name: 'Quizzes', weight: 0.0},\n            ],\n            // Array of objects with this schema, empty at first\n            //     {\n            //         name: string,\n            //         weight: number\n            //     }\n            assignments: [ ],\n            newACName: '',\n            newACWeight: 0.0,\n            firstTime: true,\n            modelFirstTime: true,\n            editing: false,\n            oldSet: null,\n            ...props.initalState\n        };\n        if (props.initalState) {\n\n            this.state.oldSet = new Set();\n            for (const category of this.state.categories) {\n                if (category['weight'] > 0) {\n                    this.state.oldSet.add(category['name']);\n                }\n            }\n\n            this.state.editing = true;\n            let sum = 0.0;\n            for (const category of this.state.categories) {\n                sum += category['weight'];\n            }\n            if (sum !== 100.0) {\n                let ratio = 100.0 / sum;\n                for (const category of this.state.categories) {\n                    category['weight'] *= ratio;\n                }\n            }\n\n        }\n        this.setItem = this.setItem.bind(this);\n        this.onModalSaved = this.onModalSaved.bind(this);\n        this.onSaved = this.onSaved.bind(this);\n    }\n\n    updateCourseTitle(evt) {\n        this.setState({\n            longName: evt.target.value\n        });\n        // console.log(this.state.courseTitle);\n    }\n\n    updateShortName(evt) {\n        this.setState({\n            shortName: evt.target.value\n        });\n\n    }\n\n    updateACName(evt) {\n        this.setState({\n            newACName: evt.target.value\n        });\n\n    }\n\n    setItem(i, obj) {\n        const copy = this.state.categories.slice();\n        copy[i] = obj;\n        this.setState({\n            categories: copy\n        });\n    }\n\n    onModalSaved() {\n        if (this.state.newACName === '') {\n            return;\n        }\n        this.setState({modelFirstTime: false});\n\n        const copy = this.state.categories.slice();\n        copy.push({\n            name: this.state.newACName,\n            weight: 0.0,\n        });\n        this.setState({\n            categories: copy,\n            newACName: '',\n            newACWeight: ''\n        });\n    }\n\n    onSaved() {\n        this.setState({firstTime: false});\n\n        let valid = true;\n\n        let sum = 0.0;\n        for (let i = 0; i < this.state.categories.length; i++) {\n            if (isNaN(this.state.categories[i]['weight'])) {\n                valid = false;\n                break;\n            }\n            sum +=  this.state.categories[i]['weight'];\n        }\n\n        const err = 0.00001;\n        if (sum < 100 - err || sum > 100 + err) {\n            valid = false;\n        }\n\n\n        if (this.state.shortName === undefined || this.state.shortName === '') {\n            valid = false;\n        }\n\n        if (!valid) {\n            alert(\"Data incomplete or weight does not sum to 100\");\n            return;\n        }\n\n        // alert when categories change\n        if (this.state.editing) {\n            let newSet = new Set();\n            for (const category of this.state.categories) {\n                if (category['weight'] > 0) {\n                    newSet.add(category['name']);\n                }\n            }\n\n            let difference = new Set(\n                [...this.state.oldSet].filter(x => !newSet.has(x)));\n\n            if (difference.size !== 0) {\n                // alert user\n\n                if (!window.confirm('A category will be deleted and the assignments in it will be removed. Do you want to proceed?')) {\n                    return;\n                }\n            }\n        }\n\n        const copy = this.state.categories.slice();\n        const newcat = copy.filter(item => item['weight'] > 0);\n        const stateCopy = {...this.state};\n        stateCopy.categories = newcat;\n        this.props.onCourseSaved(stateCopy);\n    }\n\n\n    render() {\n\n        let assCategoryItems = [];\n        for (let i = 0; i < this.state.categories.length; i++) {\n            assCategoryItems.push(\n                <AssignmentCategoryItem className=\"assignment-category-grid-item\"\n                                        key={i.toString()}\n                                        index={i}\n                                        item={this.state.categories[i]}\n                                        setItem={this.setItem}\n                                        firstTime={this.state.firstTime}/>\n            );\n        }\n\n\n        const warn = !this.state.firstTime && this.state.shortName === '' ? \" error-style\" : \"\";\n        const modelWarn = !this.state.modelFirstTime && this.state.newACName === '' ? \" error-style\" : \"\";\n        return (\n\n            <div>\n            <div className=\"NewClassPage\">\n                <div className=\"title\">{this.state.editing ? 'Editing class' : 'Add new class'}</div>\n                <div className=\"content\">\n\n\n                    <CollapseWithHeading\n                        className=\"collapse class-info\"\n                        headingText='Class Information'\n                        headingClassName='collapse-title'\n                    >\n\n\n                        <form className=\"section class-info-div\">\n                            <div >\n                                <label htmlFor=\"shortName\">Course Name (shows up on sidebar)*</label>\n                                <input className={\"form-control\" + warn} id=\"shortName\"\n                                       value={this.state.shortName}\n                                       onChange={evt => this.updateShortName(evt)}\n                                       placeholder=\"CS241\" />\n                            </div>\n                            <div className=\"course-title-section\">\n                                <label htmlFor=\"courseTitle\">Course Title</label>\n                                <input className=\"form-control\" id=\"courseTitle\"\n                                       value={this.state.longName}\n                                       onChange={evt => this.updateCourseTitle(evt)}\n                                       placeholder=\"System Programming\"/>\n                            </div>\n\n\n                        </form>\n\n                    </CollapseWithHeading>\n\n\n\n                    <CollapseWithHeading\n                        className=\"class-info\"\n                        headingText='Assignment Categories'\n                        headingClassName='collapse-title'\n                    >\n                        <div className=\"newcoursepage-wholenote\">\n                            <span className=\"newcoursepage-note\">Note</span>\n                            {\": setting a weight of 0 or unchecking a category will effectively remove the category. Weights must sum to 100.\"}\n                        </div>\n                        <div className=\"assignment-category-grid-container section\">\n                            {assCategoryItems}\n                            <div className=\"assignment-category-grid-item\">\n                                <button type=\"submit\" \n                                        className=\"add-button btn btn-primary save-button\" \n                                        data-toggle=\"modal\"\n                                        data-target=\"#exampleModalCenter\">\n                                    <div className=\"inner-box\">+</div>\n                                </button>\n                                \n                                <div className=\"modal fade\" id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                        <div className=\"modal-content\">\n                                            <div className=\"modal-header\">\n                                                <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">New Assignment Category</h5>\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                    <span aria-hidden=\"true\">&times;</span>\n                                                </button>\n                                            </div>\n                                            <div className=\"modal-body\">\n\n                                                <form>\n                                                    <div >\n                                                        <label htmlFor=\"courseTitle\">Name</label>\n                                                        <input className={\"form-control\"+modelWarn}\n                                                               id=\"courseTitle\"\n                                                               value={this.state.newACName}\n                                                               onChange={evt => this.updateACName(evt)}\n                                                               placeholder=\"MPs\"/>\n                                                    </div>\n                                                    {/*<div >*/}\n                                                        {/*<label htmlFor=\"courseSubject\">Weight</label>*/}\n                                                        {/*<input className=\"form-control\" id=\"courseSubject\"*/}\n\n                                                               {/*onChange={evt => this.updateACWeight(evt)}*/}\n                                                               {/*placeholder=\"20\" />*/}\n                                                    {/*</div>*/}\n\n                                                </form>\n                                            </div>\n                                            <div className=\"modal-footer\">\n                                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.onModalSaved()} data-dismiss=\"modal\">Save</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </CollapseWithHeading>\n\n\n\n                    <div className=\"buttons\">\n\n                        <button type=\"submit\" className=\"submit-button btn btn-primary save-button\"\n                                onClick={this.onSaved}>SAVE</button>\n\n                        <button\n                            type=\"cancel\"\n                            className=\"cancel-button btn btn-light cancel-button\"\n                            onClick={this.props.onCancelClicked}\n                        >\n                            CANCEL\n                        </button>\n                    </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst ENTER_KEY_CODE = 13;\n\nexport class InlineEdit extends React.Component {\n    static propTypes = {\n        text: PropTypes.string.isRequired,\n        staticClassName: PropTypes.string,\n        onFocusOut: PropTypes.func,\n        size: PropTypes.number\n    };\n\n    static defaultProps = {\n        onFocusOut: _.noop\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditing: false,\n            value: props.text\n        };\n        this.setEditing = this.setEditing.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFocusOut = this.handleFocusOut.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n    }\n\n    setEditing() {\n        this.setState({isEditing: true});\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleFocusOut(event) {\n        this.props.onFocusOut(event.target.value);\n        this.setState({isEditing: false});\n    }\n\n    handleKeyUp(event) {\n        if (event.keyCode === ENTER_KEY_CODE) {\n            this.handleFocusOut(event);\n        }\n    }\n\n    render() {\n        const {size, text, staticClassName} = this.props;\n        const {isEditing, value} = this.state;\n        if (isEditing) {\n            return <input\n                value={value}\n                size={size}\n                onChange={this.handleChange}\n                onBlur={this.handleFocusOut}\n                onKeyUp={this.handleKeyUp}\n                autoFocus\n            />;\n        } else {\n            return <span title=\"Click to edit.\"\n                tabIndex={0}\n                className={staticClassName}\n                onClick={this.setEditing}\n                onFocus={this.setEditing}\n            >\n                {text}\n            </span>;\n        }\n    }\n}\n","/**\n * Created by RyanX on 2018/11/16.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { InlineEdit } from './InlineEdit';\nimport './AssignmentRow.css'\n\nexport class AssignmentRow extends React.Component {\n    static propTypes = {\n        assignment: PropTypes.object.isRequired,\n        onEditHabitPressed: PropTypes.func,\n        onAssignmentSaved: PropTypes.func,\n        onAssignmentDeleted: PropTypes.func,\n    };\n\n    static defaultProps = {\n        onEditHabitPressed: _.noop,\n        onAssignmentSaved: _.noop,\n        onAssignmentDeleted: _.noop,\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(data, propName, isNumber=false) {\n        if (data.length <= 0) {\n            return;\n        }\n\n        const newValue = isNumber ? Number(data) : data;\n        if (isNumber && !isFinite(newValue)) {\n            return;\n        }\n\n        const copy = _.clone(this.props.assignment);\n        copy[propName] = newValue;\n        this.props.onAssignmentSaved(copy);\n    }\n\n    render() {\n        const {name, pointsEarned, pointsPossible, habits} = this.props.assignment;\n        return (\n            <tr className='AssignmentRow'>\n                <td>\n                    <InlineEdit\n                        text={name}\n                        staticClassName='AssignmentRow-editable'\n                        onFocusOut={data => this.handleChange(data, 'name')}\n                    />\n                </td>\n                <td>\n                    <InlineEdit\n                        text={String(pointsEarned)}\n                        staticClassName='AssignmentRow-editable'\n                        onFocusOut={data => this.handleChange(data, 'pointsEarned', true)}\n                        size={5}\n                    />\n                    /\n                    <InlineEdit\n                        text={String(pointsPossible)}\n                        staticClassName='AssignmentRow-editable'\n                        onFocusOut={data => this.handleChange(data, 'pointsPossible', true)}\n                        size={5}\n                    />\n                </td>\n                <td>\n                    <span className='btn-link' onClick={this.props.onEditHabitPressed}>\n                        {_.isEmpty(habits) ? 'Add habits' : 'Edit habits'}\n                    </span>\n                </td>\n                <td><i className='fa fa-trash' onClick={this.props.onAssignmentDeleted}/></td>\n            </tr>\n        );\n    }\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport './HabitPage.css'\r\n\r\nexport class HabitPage extends Component {\r\n    static propTypes = {\r\n        habits: PropTypes.object.isRequired,\r\n        onDataSaved: PropTypes.func,\r\n        onCancel: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        onDataSaved: _.noop,\r\n        onCancel: _.noop\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dateDue: '',\r\n            dateStarted: '',\r\n            hoursSpent: 0,\r\n            lecturePercentage: 50,\r\n            workedWithPeers: false,\r\n            ...props.habits,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSavedPressed = this.handleSavedPressed.bind(this);\r\n        this.handleCancelPressed = this.handleCancelPressed.bind(this);\r\n    }\r\n\r\n    handleChange(event, statePropName, isNumber=false) {\r\n        const newValue = isNumber ? Number(event.target.value) : event.target.value;\r\n        this.setState({[statePropName]: newValue});\r\n    }\r\n\r\n    handleSavedPressed() {\r\n        this.props.onDataSaved(this.state);\r\n    }\r\n\r\n    handleCancelPressed() {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    render() {\r\n        const {dateDue, dateStarted, hoursSpent, lecturePercentage, workedWithPeers} = this.state;\r\n        return <div>\r\n            <div className=\"habit-title\"> Edit study habits</div>\r\n\r\n            <div className='form-group'>\r\n                <label htmlFor='Question_startDate' className=\"question\">Q1: Date started</label>\r\n                <input value={dateStarted} onChange={event => this.handleChange(event, 'dateStarted')} type='date' className='form-control' id='Question_startDate' placeholder='mm/dd/yyyy' />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n                <label htmlFor='Question_due' className=\"question\">Q2: Due date</label>\r\n                <input value={dateDue} onChange={event => this.handleChange(event, 'dateDue')} type='date' className='form-control' id='Question_due' placeholder='mm/dd/yyyy' />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n                <label htmlFor='Question_hours' className=\"question\">Q3: Total hours spent on this assignment/review? </label>\r\n                <input value={hoursSpent} onChange={event => this.handleChange(event, 'hoursSpent', true)} type='number' className='form-control' id='Question_hours' placeholder='Enter hours' />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n                <label htmlFor='Question_lecture' className=\"question\">Q4: What % of lectures did you attend for this\r\n                    assignment/review? </label>\r\n                <div className=\"lecture-slider\" style={{display: 'flex', alignItems: 'center'}}>\r\n                    <input type='range' className='form-control vanessa-form-control' id='Question_lecture' min='0' max='100' value={lecturePercentage}\r\n                            onChange={event => this.handleChange(event, 'lecturePercentage', true)}/>\r\n                    <div className=\"lecture-number\">{lecturePercentage}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n                <label htmlFor='Question_classmates' className=\"question\">Q5: Did you work with classmate(s)?</label>\r\n                <select value={workedWithPeers} className='form-control' id='Question_classmates'\r\n                        onChange={event => this.handleChange(event, 'workedWithPeers')}>\r\n                    <option>Yes</option>\r\n                    <option>No</option>\r\n                </select>\r\n            </div>\r\n\r\n            <button className='btn btn-primary btn-save' onClick={this.handleSavedPressed}>Save</button>\r\n            <button className='btn btn-light btn-cancel' onClick={this.handleCancelPressed}>Cancel</button>\r\n        </div>;\r\n    }\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Ever wish <g> elements accepted `x` and `y` attributes?  This one does!\n * \n * @param {object} props - props as specified by React\n * @return {JSX.Element} - <g> element\n * @author Silas Hsu\n */\nexport function TranslatableG(props) {\n    const {x, y, innerRef, ...remainingProps} = props;\n    const transform = x || y ? `translate(${x || 0} ${y || 0})` : undefined;\n    return <g ref={innerRef} transform={transform} {...remainingProps} />;\n}\n\nTranslatableG.propTypes = {\n    x: PropTypes.number, // x translation to apply to children\n    y: PropTypes.number, // y translation to apply to children\n    innerRef: PropTypes.func // ref to the <g> element\n};\n","/**\n * Utility functions that don't really fit in any particular folder.\n */\n\n/**\n * Gets the x and y coordinates of a mouse event *relative to the top left corner of an element*.  By default, the\n * element is the event's `currentTarget`, the element to which the event listener has been attached.\n * \n * For example, if the top left corner of the element is at screen coordinates (10, 10) and the event's screen\n * coordinates are (11, 12), then this function will return `{x: 1, y: 2}`.\n * \n * @param {React.MouseEvent} event - the event for which to get relative coordinates\n * @param {Element} [relativeTo] - calculate coordinates relative to this element.  Default is event.currentTarget.\n * @return {Coordinate} object with props x and y that contain the relative coordinates\n * @author Silas Hsu\n */\nexport function getRelativeCoordinates(event, relativeTo) {\n    if (!relativeTo) {\n        relativeTo = event.currentTarget;\n    }\n    const targetBoundingRect = relativeTo.getBoundingClientRect();\n    return {\n        x: event.clientX - targetBoundingRect.left,\n        y: event.clientY - targetBoundingRect.top\n    };\n}\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\n/**\n * Calculates the difference of the two Dates in days.  This function returns positive numbers if a is after b.\n * \n * @param {Date} a - the first Date\n * @param {Date} b - the second Date\n * @return {number} the difference (a - b) of the two Dates in days\n * @author {Shyam Habarakada from StackOverflow}\n */\nexport function dateDiffInDays(a, b) {\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc1 - utc2) / _MS_PER_DAY);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRelativeCoordinates } from '../util';\n\nimport './DivWithBullseye.css';\n\n/**\n * Like a <div> in every way, except it has \"bullseye\", dotted lines that track where the mouse is.\n * \n * @author Silas Hsu\n */\nexport class DivWithBullseye extends React.Component {\n    static propTypes = {\n        innerRef: PropTypes.func, // Ref to the div\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mouseCoordinates: null\n        };\n\n        this.storeMouseCoordinates = this.storeMouseCoordinates.bind(this);\n        this.clearMouseCoordinates = this.clearMouseCoordinates.bind(this);\n    }\n\n    /**\n     * Stores a mouse event's coordinates in state.\n     * \n     * @param {MouseEvent} event - mousemove event whose coordinates to store\n     */\n    storeMouseCoordinates(event) {\n        this.setState({mouseCoordinates: getRelativeCoordinates(event)});\n        if (this.props.onMouseMove) {\n            this.props.onMouseMove(event);\n        }\n    }\n\n    /**\n     * Clears stored mouse event coordinates.\n     * \n     * @param {MouseEvent} event - mouseleave event that triggered this callback\n     */\n    clearMouseCoordinates(event) {\n        this.setState({mouseCoordinates: null});\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {innerRef, onMouseMove, onMouseLeave, style, children, ...otherProps} = this.props;\n        // Default `position: relative` so the bullseye looks right\n        const mergedStyle = Object.assign({position: 'relative'}, style);\n        return (\n        <div\n            ref={innerRef}\n            onMouseMove={this.storeMouseCoordinates}\n            onMouseLeave={this.clearMouseCoordinates}\n            style={mergedStyle}\n            {...otherProps}\n        >\n            {children}\n            {this.state.mouseCoordinates ? <Bullseye where={this.state.mouseCoordinates} />: null}\n        </div>\n        );\n    }\n}\n\n/**\n * The actual intersecting lines that form the bullseye.  Uses prop `where`, an object with props `x` and `y`.\n * \n * @param {Object} props - props as specified by React\n * @return {JSX.Element} - element to render\n */\nfunction Bullseye(props) {\n    const {x, y} = props.where;\n    const horizontalLineStyle = {\n        top: y - 1,\n        willChange: \"top\",\n    };\n    const verticalLineStyle = {\n        left: x - 1,\n        willChange: \"left\",\n    };\n    return (\n        <React.Fragment>\n            <div className=\"Bullseye-horizontal-line\" style={horizontalLineStyle} />\n            <div className=\"Bullseye-vertical-line\" style={verticalLineStyle} />\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { select, scaleLinear, axisBottom, axisLeft } from 'd3';\nimport { TranslatableG } from './TranslatableG';\n\nimport './Scatterplot.css';\nimport { DivWithBullseye } from './DivWithBullseye';\nimport {getRelativeCoordinates} from '../util';\n\nconst PADDING_BOT_LEFT = 0; // Padding on the left and bottom side\nconst PADDING_TOP_RIGHT = 0;\n\nexport class Scatterplot extends React.Component {\n    static propTypes = {\n        data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)), // n x 2 matrix of numbers\n        regressionResult: PropTypes.object,\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        xLabel: PropTypes.string,\n        /**\n         * Callback for when a point is hovered.  Should return tooltip contents to render.\n         * (index: number): JSX.Element\n         *     `index`: the index of the hovered data point\n         */\n        getPointTooltipContents: PropTypes.func,\n    };\n\n    static defaultProps = {\n        data: [],\n        width: 600,\n        height: 375,\n        xLabel: 'X'\n    };\n\n    constructor(props) {\n        super(props);\n        this.xAxisG = null;\n        this.yAxisG = null;\n        this.getScales = memoizeOne(this.getScales);\n        this.state = {\n            regressionTooltipLocation: null,\n            pointTooltipLocation: null,\n            hoveredPointIndex: -1,\n        };\n\n        this.handleRegressionHover = this.handleRegressionHover.bind(this);\n        this.handlePointHover = this.handlePointHover.bind(this);\n        this.hideTooltips = this.hideTooltips.bind(this);\n    }\n\n    /**\n     * \n     * @param {React.MouseEvent} event \n     */\n    handleRegressionHover(event) {\n        this.setState({\n            regressionTooltipLocation: {\n                ...getRelativeCoordinates(event),\n                pageX: event.pageX,\n                pageY: event.pageY\n            }\n        });\n    }\n\n    handlePointHover(event, i) {\n        this.setState({\n            pointTooltipLocation: {\n                ...getRelativeCoordinates(event),\n                pageX: event.pageX,\n                pageY: event.pageY\n            },\n            hoveredPointIndex: i\n        });\n    }\n\n    hideTooltips() {\n        this.setState({\n            regressionTooltipLocation: null,\n            pointTooltipLocation: null\n        });\n    }\n\n    getScales(props) {\n        const {data, width, height} = props;\n        const [xs, ys] = _.unzip(data);\n        const xScale = scaleLinear()\n            .domain( [_.min(xs), _.max(xs)] )\n            .range( [PADDING_BOT_LEFT, width - PADDING_TOP_RIGHT] );\n        const yScale = scaleLinear()\n            .domain( [_.max(ys), _.min(ys)] )\n            .range( [PADDING_TOP_RIGHT, height - PADDING_BOT_LEFT] );\n        return {xScale, yScale};\n    }\n\n    drawAxes() {\n        const {xScale, yScale} = this.getScales(this.props);\n        select(this.xAxisG).call(axisBottom(xScale));\n        select(this.yAxisG).call(axisLeft(yScale));\n    }\n\n    componentDidMount() {\n        this.drawAxes();\n    }\n\n    componentDidUpdate() {\n        this.drawAxes();\n    }\n\n    renderPoints() {\n        const data = this.props.data;\n        if (data.length === 0) {\n            const {width, height} = this.props;\n            return <text\n                className='Scatterplot-no-data-message'\n                x={0.5 * width}\n                y={0.5 * height}\n                textAnchor='middle'\n            >\n                No data\n            </text>;\n        }\n        \n        const {xScale, yScale} = this.getScales(this.props);\n        return data.map((point, i) => <circle\n            key={i}\n            cx={xScale(point[0])}\n            cy={yScale(point[1])}\n            r={4}\n            fill='cadetblue'\n            fillOpacity={0.75}\n            onMouseMove={event => this.handlePointHover(event, i)}\n            onMouseOut={this.hideTooltips}\n        />);\n    }\n\n    renderRegressionResult() {\n        const regressionResult = this.props.regressionResult;\n        if (!regressionResult) {\n            return null;\n        }\n\n        const isShowingTooltip = this.state.regressionTooltipLocation != null;\n\n        const {xScale, yScale} = this.getScales(this.props);\n        const [xValue1, xValue2] = xScale.domain();\n        const yValue1 = regressionResult.predict(xValue1)[1];\n        const yValue2 = regressionResult.predict(xValue2)[1];\n\n        const [x1, x2] = xScale.range();\n        const y1 = yScale(yValue1);\n        const y2 = yScale(yValue2);\n        const lineCoordinates = {x1, y1, x2, y2};\n\n        return <React.Fragment>\n            <line\n                {...lineCoordinates}\n                stroke={isShowingTooltip ? 'red' : 'pink'}\n                strokeWidth={isShowingTooltip ? 3 : 2}\n            />\n            <line\n                {...lineCoordinates}\n                stroke='white'\n                strokeWidth={10}\n                strokeOpacity={0}\n                onMouseMove={this.handleRegressionHover}\n                onMouseOut={this.hideTooltips}\n            />\n        </React.Fragment>;\n    }\n\n    renderRegressionTooltip() {\n        const {xLabel, regressionResult} = this.props;\n        const location = this.state.regressionTooltipLocation;\n        if (!location || !regressionResult) {\n            return null;\n        }\n\n        const xValue = this.getScales(this.props).xScale.invert(location.x);\n        const yPrediction = regressionResult.predict(xValue)[1];\n        return <Tooltip x={location.pageX} y={location.pageY}>\n            Predicted grade if <i>{xLabel}</i> is {xValue.toFixed(2)}: <b>{yPrediction.toFixed(0)}%</b>\n        </Tooltip>;\n    }\n\n    renderPointTooltip() {\n        const location = this.state.pointTooltipLocation;\n        const index = this.state.hoveredPointIndex;\n        const {data, getPointTooltipContents} = this.props;\n        if (!location || index < 0 || index >= data.length || !getPointTooltipContents) {\n            return null;\n        }\n\n        return <Tooltip x={location.pageX} y={location.pageY}>{getPointTooltipContents(index)}</Tooltip>;\n    }\n\n    render() {\n        const {width, height, xLabel} = this.props;\n        return <div className='Scatterplot'>\n            <div className='Scatterplot-inner'>\n                <span className='Scatterplot-y-label'>Grade %</span>\n                <DivWithBullseye style={{display: 'inline-block'}}>\n                    <svg className='Scatterplot-svg' width={width} height={height}>\n                        <TranslatableG y={height - PADDING_BOT_LEFT} innerRef={node => this.xAxisG = node} />\n                        <TranslatableG x={PADDING_BOT_LEFT} innerRef={node => this.yAxisG = node} />\n                        {this.renderRegressionResult()}\n                        {this.renderPoints()}\n                    </svg>\n                </DivWithBullseye>\n                {this.renderRegressionTooltip()}\n                {this.renderPointTooltip()}\n            </div>\n            <span className='Scatterplot-x-label'>{xLabel}</span>\n        </div>\n    }\n}\n\nfunction Tooltip(props) {\n    const {x, y, children} = props;\n    const style = {\n        position: 'fixed',\n        left: x + 10,\n        top: y + 10,\n        zIndex: 1\n    };\n    return <div className='Scatterplot-tooltip' style={style}>{children}</div>;\n}\n","import { dateDiffInDays } from '../util';\n\nclass HabitAggregator {\n    constructor(aggregationName, getHabitValue, dataType='number') {\n        this.aggregationName = aggregationName;\n        this.getHabitValue = getHabitValue;\n        this.aggregateHabits = this.aggregateHabits.bind(this);\n        this.dataType = dataType;\n    }\n\n    aggregateHabits(course) {\n        const dataOrigins = [];\n        const data = [];\n        for (const assignment of course.assignments) {\n            const gradePercent = assignment.pointsEarned / assignment.pointsPossible * 100;\n            const habitValue = this.getHabitValue(assignment.habits);\n            if (isFinite(gradePercent) && isFinite(habitValue)) {\n                dataOrigins.push({\n                    course,\n                    assignment\n                });\n                //dataOrigins.push(`${course.shortName}: ${assignment.name}`);\n                data.push([habitValue, gradePercent]);\n            }\n        }\n        return {data, dataOrigins};\n    }\n}\n\nexport const AGGREGATORS = [\n    new HabitAggregator('Days started in advance', habits => \n        dateDiffInDays(new Date(habits.dateDue), new Date(habits.dateStarted))\n    ),\n    new HabitAggregator('Hours spent on assignment', habits => habits.hoursSpent),\n    new HabitAggregator('% of lectures attended', habits => habits.lecturePercentage),\n    new HabitAggregator('Worked with peers', habits => {\n        if (habits.workedWithPeers === undefined) {\n            return Infinity;\n        } else {\n            return habits.workedWithPeers ? 1 : 0;\n        }\n    }, 'boolean'),\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport regression from 'regression';\nimport { Scatterplot } from './Scatterplot';\nimport { AGGREGATORS } from './HabitAggregators';\nimport { CollapseWithHeading } from '../CollapseWithHeader';\n\nimport './AnalyticsPage.css';\n\nfunction numberToBool(number) {\n    return number !== 0;\n}\n\nexport class AnalyticsPage extends React.Component {\n    static propTypes = {\n        selectedCourse: PropTypes.object.isRequired,\n        courses: PropTypes.arrayOf(PropTypes.object)\n    };\n\n    static defaultProps = {\n        courses: []\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAggregatingAll: false,\n            selectedAggregator: AGGREGATORS[0].aggregationName\n        };\n        this.setIsAggregatingAll = this.setIsAggregatingAll.bind(this);\n        this.handleXAxisChange = this.handleXAxisChange.bind(this);\n        this.getTooltipContentsForPoint = this.getTooltipContentsForPoint.bind(this);\n        this.aggregateData = memoizeOne(this.aggregateData);\n    }\n\n    setIsAggregatingAll(newValue) {\n        this.setState({isAggregatingAll: newValue});\n    }\n\n    handleXAxisChange(event) {\n        this.setState({selectedAggregator: event.target.value});\n    }\n\n    aggregateData(courses) {\n        const datas = AGGREGATORS.map(aggregator => {\n            const resultsPerClass = courses.map(aggregator.aggregateHabits);\n            const data = _.flatMap(resultsPerClass, classResult => classResult.data);\n            const dataOrigins = _.flatMap(resultsPerClass, classResult => classResult.dataOrigins);\n            return {\n                aggregationName: aggregator.aggregationName,\n                dataType: aggregator.dataType,\n                data,\n                dataOrigins,\n                regressionResult: regression.linear(data)\n            };\n        });\n        datas.sort((a, b) => b.regressionResult.r2 - a.regressionResult.r2); // Sort by biggest r2 to smallest\n        return datas;\n    }\n\n    renderXAxisSelect(aggregationResults) {\n        const options = aggregationResults.map(aggregate => {\n            const {aggregationName, regressionResult} = aggregate;\n            const r2Explanation = isFinite(regressionResult.r2) ?\n                `(Correlation strength = ${regressionResult.r2})` : '';\n            return <option key={aggregationName} value={aggregationName}>{aggregationName} {r2Explanation}</option>;\n        });\n        return <div className='AnalyticsPage-habit-selector'>\n            <label>Habit to analyze: </label>\n            <select value={this.state.selectedAggregator} onChange={this.handleXAxisChange}>{options}</select>\n        </div>;\n    }\n\n    renderAdvancedStatistics(regressionResult) {\n        if (!regressionResult) {\n            return null;\n        }\n        const {string, equation, points, r2} = regressionResult;\n        return <CollapseWithHeading headingText='Advanced statistics' headingClassName=\"advancedAnalytics\" initialIsOpen={false}>\n            <table className=\"analyticsTable table-bordered\">\n                <tbody>\n                    <tr>\n                        <td>Assignments in data pool: </td>\n                        <td><b>{points.length}</b></td> \n                    </tr>\n                    <tr>\n                        <td>\n                            Correlation of Grades with {this.state.selectedAggregator}:  \n                        </td>\n                        <td><b>{isFinite(r2) ? r2 : 'undefined'}</b></td> \n                    </tr>\n                    <tr>\n                        <td>Line Equation: </td>\n                        <td><b>{equation.every(isFinite) ? string : 'undefined'}</b></td> \n                    </tr>\n                </tbody>\n            </table>\n        </CollapseWithHeading>;\n    }\n\n    renderDataSourceOptions() {\n        return <div className='AnalyticsPage-data-source-options'>\n            <h6>Use data from:</h6>\n            <div>\n                <label>\n                    <input\n                        type='radio'\n                        checked={!this.state.isAggregatingAll}\n                        onChange={() => this.setIsAggregatingAll(false)}\n                    />\n                    {this.props.selectedCourse.shortName}\n                </label>\n            </div>\n            <div>\n                <label>\n                    <input\n                        type='radio'\n                        checked={this.state.isAggregatingAll}\n                        onChange={() => this.setIsAggregatingAll(true)}\n                    />\n                    All classes (including inactive)\n                </label>\n            </div>\n        </div>;\n    }\n\n    getTooltipContentsForPoint(index) {\n        const origin = this.selectedData.dataOrigins[index];\n        let x = this.selectedData.data[index][0];\n        if (this.selectedData.dataType === 'boolean') {\n            x = numberToBool(x);\n        }\n        const percent = this.selectedData.data[index][1].toFixed(1);\n        return <table className='table-sm table-bordered' style={{margin: 0}}>\n            <tbody>\n                <tr><td>Class</td><td><b>{origin.course.shortName}</b></td></tr>\n                <tr><td>Assignment</td><td><b>{origin.assignment.name}</b></td></tr>\n                <tr>\n                    <td>{this.selectedData.aggregationName}</td>\n                    <td><b>{String(x)}</b></td>\n                </tr>\n                <tr>\n                    <td>Grade</td>\n                    <td><b>{percent}%</b> ({origin.assignment.pointsEarned}/{origin.assignment.pointsPossible})</td>\n                </tr>\n            </tbody>\n        </table>;\n    }\n\n    render() {\n        const {courses, selectedCourse} = this.props;\n        const {isAggregatingAll, selectedAggregator} = this.state;\n        const aggregationResults = this.aggregateData(isAggregatingAll ? courses : [selectedCourse]);\n        const selectedData = aggregationResults.find(aggregate =>\n            aggregate.aggregationName === selectedAggregator\n        );\n        this.selectedData = selectedData;\n        const regressionResult = selectedData && selectedData.regressionResult.equation.every(isFinite) ?\n            selectedData.regressionResult : undefined;\n\n        return <div className='AnalyticsPage'>\n            <div className='AnalyticsPage-plot-container'>\n                {selectedData ?\n                    <Scatterplot\n                        data={selectedData.data}\n                        regressionResult={regressionResult}\n                        xLabel={selectedAggregator}\n                        getPointTooltipContents={this.getTooltipContentsForPoint}\n                    />\n                    :\n                    <Scatterplot /> // Empty scatterplot if no selected data\n                }\n                {this.renderXAxisSelect(aggregationResults)}\n            </div>\n            <div className='AnalyticsPage-options-container'>\n                {this.renderDataSourceOptions()}\n                {this.renderAdvancedStatistics(regressionResult)}\n            </div>\n        </div>;\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport uuid from 'uuid/v4';\nimport Switch from 'react-switch';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport { AssignmentRow } from './AssignmentRow';\nimport { CollapseWithHeading } from '../CollapseWithHeader';\nimport { HabitPage } from '../HabitPage/HabitPage';\nimport { AnalyticsPage } from '../AnalyticsPage/AnalyticsPage';\nimport { NewCoursePage } from '../NewCoursePage/NewCoursePage';\nimport './CourseHomePage.css';\n\n/**\n * Content pane displaying the assignment details of course selected.\n * \n * @author Srilakshmi Prasad\n * @author Alex Blacketor\n */\nexport class CourseHomePage extends React.Component {\n    static propTypes = {\n        courses: PropTypes.arrayOf(PropTypes.object).isRequired,\n        selectedCourse: PropTypes.object.isRequired,\n        onCourseEdited: PropTypes.func,\n        onCourseDeleteRequested: PropTypes.func\n    };\n\n    static defaultProps = {\n        onCourseEdited: _.noop\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCourseBeingEdited: false,\n            prevCourseId: props.selectedCourse.id,\n            habitBeingEdited: '', // ID of the assignment whose habits are being edited\n            isShowingAnalytics: false,\n            isShowingDeleteWarning: false,\n        };\n        this.handleAssignmentAdd = this.handleAssignmentAdd.bind(this);\n        this.handleAssignmentSave = this.handleAssignmentSave.bind(this);\n        this.handleAssignmentDelete = this.handleAssignmentDelete.bind(this);\n        this.setHabitBeingEdited = this.setHabitBeingEdited.bind(this);\n        this.handleHabitSave = this.handleHabitSave.bind(this);\n        this.toggleActive = this.toggleActive.bind(this);\n        this.toggleWarningModal = this.toggleWarningModal.bind(this);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.selectedCourse.id !== state.prevCourseId) {\n            return {\n                prevCourseId: props.selectedCourse.id,\n                habitBeingEdited: '',\n                isCourseBeingEdited: false,\n                isShowingDeleteWarning: false,\n            };\n        } else {\n            return { prevCourseId: props.selectedCourse.id };\n        }\n    }\n\n    setNewAssignments(newAssignments) {\n        const courseCopy = _.clone(this.props.selectedCourse);\n        courseCopy.assignments = newAssignments;\n        this.props.onCourseEdited(courseCopy);\n    }\n\n    handleAssignmentAdd(category) {\n        const newAssignments = this.props.selectedCourse.assignments.slice();\n        newAssignments.push({\n            id: uuid(),\n            name: 'New assignment',\n            weight: 0, // If 0, use default weight\n            pointsEarned: 0,\n            pointsPossible: 0,\n            category: category,\n            habits: {}\n        });\n        this.setNewAssignments(newAssignments);\n    }\n\n    handleAssignmentSave(newAssignment) {\n        const assignmentsCopy = this.props.selectedCourse.assignments.slice();\n        const index = assignmentsCopy.findIndex(assignment => assignment.id === newAssignment.id);\n        if (index < 0) {\n            return;\n        }\n        assignmentsCopy[index] = newAssignment;\n        this.setNewAssignments(assignmentsCopy);\n    }\n\n    handleAssignmentDelete(assignmentToDelete) {\n        const assignmentsCopy = this.props.selectedCourse.assignments.slice();\n        const index = assignmentsCopy.findIndex(assignment => assignment.id === assignmentToDelete.id);\n        if (index < 0) {\n            return;\n        }\n        assignmentsCopy.splice(index, 1);\n        this.setNewAssignments(assignmentsCopy);\n    }\n\n    setHabitBeingEdited(assignment) {\n        this.setState({habitBeingEdited: assignment.id});\n    }\n\n    handleHabitSave(habits) {\n        const assignmentsCopy = this.props.selectedCourse.assignments.slice();\n        const index = assignmentsCopy.findIndex(assignment => assignment.id === this.state.habitBeingEdited);\n        if (index < 0) {\n            return;\n        }\n        const assignment = _.clone(assignmentsCopy[index]);\n        assignment.habits = habits;\n        assignmentsCopy[index] = assignment;\n        this.setNewAssignments(assignmentsCopy);\n        this.setState({habitBeingEdited: ''});\n    }\n\n    toggleActive() {\n        const courseCopy = _.clone(this.props.selectedCourse);\n        courseCopy.isActive = !courseCopy.isActive;\n        this.props.onCourseEdited(courseCopy);\n    }\n\n    renderCategoryTable(category, assignments=[]) {\n        const assignmentRows = assignments.map(assignment => (\n            <AssignmentRow\n                key={assignment.id}\n                assignment={assignment}\n                onEditHabitPressed={() => this.setHabitBeingEdited(assignment)}\n                onAssignmentSaved={this.handleAssignmentSave}\n                onAssignmentDeleted={() => this.handleAssignmentDelete(assignment)}\n            />\n        ));\n\n        return <CollapseWithHeading className='categoryHeading' key={category.name} headingText={`${category.name} (${category.weight}%)`} titleBackground={true}>\n            <table className=\"table table-hover\">\n                <thead>\n                    <tr className='tableRow'>\n                        <th>Assignment</th><th>Grade</th><th>Habits</th><th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {assignmentRows}\n                    <tr onClick={() => this.handleAssignmentAdd(category.name)}>\n                        <td className=\"addRow\" colSpan={4}><i className=\"fa fa-plus fa-plus2\"/></td>\n                    </tr>\n                </tbody>\n            </table>\n        </CollapseWithHeading>\n    }\n\n    toggleWarningModal() {\n        this.setState(prevState => {\n            return {isShowingDeleteWarning: !prevState.isShowingDeleteWarning}\n        });\n    }\n\n    renderWarningModal() {\n        return <Modal isOpen={this.state.isShowingDeleteWarning} toggle={this.toggleWarningModal} >\n            <ModalHeader toggle={this.toggleWarningModal}>Delete {this.props.selectedCourse.shortName}?</ModalHeader>\n            <ModalBody>\n                All assignments will be <b>PERMANENTLY lost</b>.  This <b>CANNOT be undone</b>!\n            </ModalBody>\n            <ModalFooter>\n                <button className=\"btn btn-danger\" onClick={this.props.onCourseDeleteRequested}>\n                    Delete\n                </button>\n                <button type=\"button\" className=\"btn\" onClick={this.toggleWarningModal}>Cancel</button>\n            </ModalFooter>\n        </Modal>;\n    }\n\n    render() {\n        if (this.state.isCourseBeingEdited) { // TODO Ryan: move this if statement somewhere better\n            return <NewCoursePage\n                initalState={this.props.selectedCourse}\n                onCourseSaved={data => {\n                    this.props.onCourseEdited(data);\n                    this.setState({isCourseBeingEdited: false});\n                }}\n                onCancelClicked={() => this.setState({isCourseBeingEdited: false})}\n            />;\n        }\n        const course = this.props.selectedCourse;\n        const {habitBeingEdited, isShowingAnalytics} = this.state;\n        if (habitBeingEdited) {\n            const assignment = course.assignments.find(assignment => assignment.id === habitBeingEdited);\n            return <HabitPage\n                habits={assignment.habits}\n                onDataSaved={this.handleHabitSave}\n                onCancel={() => this.setState({habitBeingEdited: ''})}\n            />;\n        }\n\n        const categoryNames = new Set(course.categories.map(category => category.name));\n        const assignmentsForCategory = _.groupBy(course.assignments,\n            assignment => categoryNames.has(assignment.category) && assignment.category);\n\n        let bottomContent;\n        if (isShowingAnalytics) {\n            bottomContent = <AnalyticsPage selectedCourse={course} courses={this.props.courses} />\n        } else {\n            bottomContent = <div>\n                {course.categories.map(\n                    category => this.renderCategoryTable(category, assignmentsForCategory[category.name])\n                )}\n                <div style={{float: 'right', marginRight: '30px'}}>\n                    <label style={{display: 'flex'}}>\n                        <span style={{marginRight: '1ch'}}>Status: <b>{course.isActive ? 'active' : 'inactive'}</b></span>\n                        <Switch onChange={this.toggleActive} checked={course.isActive} />\n                    </label>\n                    <div>\n                        <span>Delete class</span>\n                        <button className='btn-sm btn-danger' style={{float: 'right', width: 56}} onClick={this.toggleWarningModal} >\n                            <i className='fa fa-trash' />\n                        </button>\n                    </div>\n                    \n                </div>\n                {this.renderWarningModal()}\n            </div>\n        }\n\n        let title = course.shortName;\n        if (course.longName) {\n            title += \": \" + course.longName;\n        }\n        return <div className='CourseHomePage'>\n            <div className='topBar'>\n                <span className={\"class-name-title\"}>{title}</span>\n                <i className=\"fas fa-cog my-cog\" onClick={() => this.setState({isCourseBeingEdited: true})} />\n                <div className=\"btn-group btn-group-toggle my-group\" data-toggle=\"buttons\">\n                    <label\n                        className=\"btn btn-outline-primary active\"\n                        onClick={() => this.setState({isShowingAnalytics: false})}\n                    >\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\" checked readOnly={true}/> Class Home\n                    </label>\n                    <label\n                        className=\"btn btn-outline-primary\"\n                        onClick={() => this.setState({isShowingAnalytics: true})}\n                    >\n                        <input type=\"radio\" name=\"options\" id=\"option2\" autoComplete=\"off\" readOnly={true}/>Analytics\n                    </label>\n                </div>\n            </div>\n            {bottomContent}\n        </div>;\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { CollapseWithHeading } from './CollapseWithHeader';\nimport { NothingSelectedPane } from './NothingSelectedPane';\nimport { NewCoursePage } from './NewCoursePage/NewCoursePage';\nimport { CourseHomePage } from './CourseHomePage/CourseHomePage';\nimport bulbImage from './single_bulb_logo.png';\n\nimport './Navigation.css';\n\n/**\n * Top level navigation for the app.  Includes nav bar and side bar, and renders the main content pane.\n * \n * @author Silas Hsu\n */\nexport class Navigation extends React.Component {\n    static propTypes = {\n        courses: PropTypes.arrayOf(PropTypes.object), // Array of Course objects to manage\n        /**\n         * Callback when a course is added, or courses are changed.  Signature (newCourses: Course[]): void\n         * \n         * @param {Course[]} newCourses - new courses\n         */\n        onCoursesChanged: PropTypes.func\n    };\n\n    static defaultProps = {\n        courses: [],\n        onCoursesChanged: _.noop\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAddingCourse: false,\n            selectedCourse: '',\n            isSidebarOpen: true,\n        };\n\n        this.showAddCoursesPane = this.showAddCoursesPane.bind(this);\n        this.handleCourseAdd = this.handleCourseAdd.bind(this);\n        this.handleCourseEdit = this.handleCourseEdit.bind(this);\n        this.handleCourseDelete = this.handleCourseDelete.bind(this);\n        this.toggleSidebar = this.toggleSidebar.bind(this);\n    }\n\n    /**\n     * Sets state to deselects any selected class and show the new class pane.\n     */\n    showAddCoursesPane() {\n        this.setState({\n            isAddingCourse: true,\n            selectedCourse: ''\n        });\n    }\n\n    /**\n     * Sets state to select a course.\n     * \n     * @param {Course} course - course object\n     */\n    setSelectedCourse(course) {\n        this.setState({\n            isAddingCourse: false,\n            selectedCourse: course.id\n        });\n    }\n\n    /**\n     * Handles adding a new course.  Sets the selected course to be the new one and calls the `onCourseAdded` callback.\n     * \n     * @param {Course} course - course data that was added\n     */\n    handleCourseAdd(course) {\n        this.setSelectedCourse(course);\n        const coursesCopy = this.props.courses.slice();\n        coursesCopy.push(course);\n        this.props.onCoursesChanged(coursesCopy);\n    }\n\n    handleCourseEdit(course) {\n        const index = this.props.courses.findIndex(course => course.id === this.state.selectedCourse);\n        const coursesCopy = this.props.courses.slice();\n        coursesCopy[index] = course;\n        this.props.onCoursesChanged(coursesCopy);\n    }\n\n    handleCourseDelete() {\n        const index = this.props.courses.findIndex(course => course.id === this.state.selectedCourse);\n        const coursesCopy = this.props.courses.slice();\n        coursesCopy.splice(index, 1);\n        this.props.onCoursesChanged(coursesCopy);\n    }\n\n    /**\n     * Sets state to toggle visibility of the sidebar.\n     */\n    toggleSidebar() {\n        this.setState(prevState => {\n            return {isSidebarOpen: !prevState.isSidebarOpen};\n        });\n    }\n\n    /**\n     * Renders a selectable list of courses.\n     * \n     * @param {Course[]} courses - array of courses to render\n     * @return {JSX.Element} elements to render\n     */\n    renderCourseGroup(courses) {\n        const courseElements = courses.map(course => {\n            let className;\n            if (course.id === this.state.selectedCourse) {\n                className = 'btn btn-success Navigation-sidebar-course';\n            } else {\n                className = 'btn btn-light hoverable Navigation-sidebar-course';\n            }\n\n            return <button\n                key={course.id}\n                className={className}\n                title={course.shortName}\n                onClick={() => this.setSelectedCourse(course)}\n            >\n                {course.shortName}\n            </button>;\n        });\n        return <div className='btn-group-vertical'>{courseElements}</div>;\n    }\n\n    /**\n     * Renders the sidebar of the app.\n     * \n     * @return {JSX.Element} element to render\n     */\n    renderSidebar() {\n        const [activeCourses, inactiveCourses] = _.partition(this.props.courses, course => course.isActive);\n        return <div className='Navigation-sidebar' style={{display: this.state.isSidebarOpen ? undefined : 'none'}}>\n            <CollapseWithHeading\n                headingText='Active courses'\n                headingClassName='Navigation-sidebar-heading Navigation-sidebar-active-heading'\n            >\n                {this.renderCourseGroup(activeCourses)}\n            </CollapseWithHeading>\n\n            <CollapseWithHeading\n                headingText='Inactive courses'\n                headingClassName='Navigation-sidebar-heading Navigation-sidebar-inactive-heading'\n                initialIsOpen={false}\n            >\n                {this.renderCourseGroup(inactiveCourses)}\n            </CollapseWithHeading>\n\n            <button\n                className='btn btn-primary btn-block Navigation-add-course-button'\n                onClick={this.showAddCoursesPane}\n            >\n                <i className=\"fas fa-plus\" /> Add new class\n            </button>\n        </div>;\n    }\n\n    render() {\n        const selectedCourse = this.props.courses.find(course => course.id === this.state.selectedCourse);\n        let contentPane;\n        if (selectedCourse) {\n            contentPane = <CourseHomePage\n                courses={this.props.courses}\n                selectedCourse={selectedCourse}\n                onCourseEdited={this.handleCourseEdit}\n                onCourseDeleteRequested={this.handleCourseDelete}\n            />;\n        } else if (this.state.isAddingCourse) {\n            contentPane = <NewCoursePage\n                onCourseSaved={this.handleCourseAdd}\n                onCancelClicked={() => this.setState({isAddingCourse: false})}\n            />;\n        } else {\n            contentPane = <NothingSelectedPane />;\n        }\n\n        return <div className='Navigation'>\n            <nav className='navbar navbar-expand-lg navbar-light Navigation-navbar'>\n                <div className='navbar-brand' style={{display: 'flex'}} onClick={() => this.setState({selectedCourse: ''})}>\n                    <img src={bulbImage} className=\"my-img\" alt=\"logo\" />\n                    <span className=\"app-title\">Grade Buddy</span>\n                </div>\n            </nav>\n            <div className='Navigation-main-container'>\n                {this.renderSidebar()}\n                <div className='Navigation-sidebar-opener hoverable' onClick={this.toggleSidebar}>\n                    {this.state.isSidebarOpen ? '‹' : '›'}\n                </div>\n                <div className='Navigation-content-pane'>{contentPane}</div>\n            </div>\n        </div>\n    }\n}\n","import React, { Component } from 'react';\nimport { Navigation } from './Navigation';\nimport uuid from 'uuid/v4';\n\nconst COURSE = {\n    id: uuid(),\n    shortName: \"CS125\",\n    longName: \"Intro to Computer Science\",\n    isActive: true,\n    categories: [\n        {\n            name: 'Homework',\n            weight: 30\n        },\n        {\n            name: 'Exams',\n            weight: 50\n        },\n        {\n            name: 'Quizzes',\n            weight: 20\n        }\n    ],\n    assignments: [ // Array of objects with this schema, empty at first\n        {\n            id: uuid(),\n            name: \"HW1\",\n            weight: 0, // If 0, use default weight\n            pointsEarned: 7,\n            pointsPossible: 8,\n            category: \"Homework\",\n            habits: {\n                dateStarted: '2018-05-05',\n                dateDue: '2018-05-06',\n                hoursSpent: 2,\n                lecturePercentage: 75,\n                workedWithPeers: true\n            }\n        },\n        {\n            id: uuid(),\n            name: \"HW2\",\n            weight: 0, // If 0, use default weight\n            pointsEarned: 11,\n            pointsPossible: 12,\n            category: \"Homework\",\n            habits: {\n                dateStarted: '2018-05-05',\n                dateDue: '2018-05-07',\n                hoursSpent: 3,\n                lecturePercentage: 100,\n                workedWithPeers: true\n            }\n        },\n        {\n            id: uuid(),\n            name: \"Exam 1\",\n            weight: 0, // If 0, use default weight\n            pointsEarned: 100,\n            pointsPossible: 100,\n            category: \"Exams\",\n            habits: {\n                dateStarted: '2018-05-05',\n                dateDue: '2018-05-10',\n                hoursSpent: 5,\n                lecturePercentage: 90,\n                workedWithPeers: false\n            }\n        },\n    ]\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            courses: [COURSE]\n        };\n        this.handleCoursesChanged = this.handleCoursesChanged.bind(this);\n    }\n\n    /**\n     * Sets state to change course data\n     * \n     * @param {Course[]} courses - course array that will replace state\n     */\n    handleCoursesChanged(newCourses) {\n        this.setState({courses: newCourses});\n    }\n\n    render() {\n        return <Navigation courses={this.state.courses} onCoursesChanged={this.handleCoursesChanged} />;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}